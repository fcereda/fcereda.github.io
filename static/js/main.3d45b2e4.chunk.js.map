{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleEditorChange","e","react_default","a","createElement","style","display","flexDirection","height","ts","initialValue","init","plugins","content_css","content_style","block_formats","font_formats","fontsize_formats","formats","pn","block","classes","remove","exact","pc","h1","h2","h3","alignleft","selector","aligncenter","alignright","strikethrough","inline","style_formats","title","format","preview_styles","valid_elements","indentation","toolbar","menubar","statusbar","language","nonbreaking_force_tab","advlist_number_styles","spellchecker_language","entities","paste_merge_formats","paste_retain_style_properties","paste_word_valid_elements","invalid_elements","valid_classes","valid_styles","table","td","div","ul","ol","table_default_styles","table_responsive_width","table_advtab","table_cell_advtab","table_row_advtab","table_toolbar","textpattern_patterns","start","replacement","cmd","value","list-style-type","contextmenu","autosave_restore_when_empty","autosave_retention","min_height","setup","editor","btnZoomIn","btnZoomOut","ZOOMS","minZoom","maxZoom","length","increaseZoomAndCheckButtons","increment","zoom","arguments","undefined","bodyElement","dom","getRoot","Number","getStyle","zoomPosition","indexOf","newZoom","setStyle","increaseZoom","setDisabled","on","execCommand","addEventListener","ctrlKey","key","preventDefault","stopPropagation","ui","registry","addButton","icon","tooltip","disabled","onSetup","btn","onAction","init_instance_callback","console","log","node","onChange","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d45b2e4.chunk.js","sourcesContent":["import React from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\nclass App extends React.Component {\n  handleEditorChange = (e) => {\n    //console.log('Content was updated:', e.target.getContent());\n  }\n\n  render() {\n\n    const formats = {\n      pn: { block: 'p', classes: 'num', remove: 'all', exact: true },\n      pc: { block: 'p', remove: 'all', exact: true},  \n      h1: { block: 'h1', exact: true },\n      h2: { block: 'h2', exact: true },\n      h3: { block: 'h3', exact: true }, \n      alignleft: { selector: 'td', classes: 'left' },\n      aligncenter: { selector: 'td', classes: 'center' },\n      alignright: { selector: 'td', classes: 'right' },\n      strikethrough: { inline: 'del', remove: 'all'}\n    }\n    const style_formats = [\n      { title: 'Normal', format: 'pc' },\n      { title: 'Numerado', format: 'pn' },\n      { title: 'Título 1', format: 'h1' },\n      { title: 'Título 2', format: 'h2' },\n      { title: 'Título 3', format: 'h3' }\n    ]\n\n    return (\n      <div style={{display:'flex', flexDirection: 'column', height:'100%'}}>\n      <Editor\n        initialValue='<p class=\"num\"> </p>'\n        init={{\n          plugins: 'link code lists advlist textpattern link table nonbreaking paste searchreplace spellchecker charmap fullscreen autosave',\n          content_css: [\n            'https://fonts.googleapis.com/css?family=Source+Serif+Pro:400,600,400i,600i&display=swap',\n            'https://fonts.googleapis.com/css?family=Roboto:400,400i,500,500i,700,700i|Fira+Sans:400,400i,500,500i|Nunito+Sans:400,400i,600,600i,700,700i&display=swap',\n            'https://fonts.googleapis.com/css?family=Roboto+Mono&display=swap',\n            '/editor-content.css'\n          ],\n          content_style: \"body {font-family: 'Source Serif Pro', serif; font-size:18px; padding-left: calc(50% - 35ch); padding-right: calc(50% - 35ch);}\",\n\n          block_formats: 'Numerado=pn; Normal=pc; Título 1=h1; Título 2=h2; Título 3=h3',\n          font_formats: 'Arial=arial,helvetica,sans-serif; Courier New=courier new,monospace; Source Serif=Source Serif Pro',\n          fontsize_formats: '11px 12px 14px 15px 16px 17px 18px 24px 36px 48px',\n          formats: formats,\n          style_formats: style_formats,\n          preview_styles: 'font-family font-size font-weight',\n          \n          valid_elements: 'a[href|target=_blank],br,strong/b,u,em/i,del/strike,sub,sup,' + \n            'blockquote,p[class|style],h1,h2,h3,h4,h5,h6,' + \n            'p[class]/div[class],' +   // Converte elementos <div> para <p>  \n            'ol[style],ul[style],li[style],' + \n            'table[style|border|width|height|align|cellspacing|cellpadding],thead,tbody,tfoot,tr[style],td[style|class|width|height],th[style|class|width|height]',\n\n          indentation : '2em',\n          \n          toolbar: 'formatselect | paste cut copy | undo redo | searchreplace | bold italic strikethrough | numlist bullist | blockquote outdent indent | charmap table | zoomin zoomout code',\n          menubar: false,\n          statusbar: false,\n          language: 'pt_BR',\n\n          nonbreaking_force_tab: true,\n          advlist_number_styles: 'decimal,lower-alpha,lower-roman,upper-alpha',\n          spellchecker_language: 'pt_BR',\n          entities: 'euro',\n\n          paste_merge_formats: true,\n          paste_retain_style_properties: '',\n          paste_word_valid_elements: 'b,strong,i,em,u,sub,sup,strike,h1,h2,h3,p,table,tbody,thead,tfoot,tr,td,th,div,ol,ul,li,br,del',\n          invalid_elements: 'pre',\n          valid_classes: 'num left center right',\n          valid_styles: {\n            'table':   'width, min-width',\n            'td': 'width',\n            'div': 'width,height',\n            'ul': 'list-style-type',\n            'ol': 'list-style-type',\n          },\n\n          table_default_styles: {\n          },\n          table_responsive_width: true,\n          table_advtab: false,\n          table_cell_advtab: false,\n          table_row_advtab: false,\n          table_toolbar: \"tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol | alignleft aligncenter alignright\",\n\n          textpattern_patterns: [\n            {start: '--', replacement: '—'},\n            {start: '#', format: 'h1'},\n            {start: '##', format: 'h2'},\n            {start: '###', format: 'h3'},\n            {start: '* ', cmd: 'InsertUnorderedList'},\n            {start: '- ', cmd: 'InsertUnorderedList'},\n            {start: '1. ', format: 'pn'},\n            {start: '2. ', format: 'pn'},\n            {start: '3. ', format: 'pn'},\n            {start: '1) ', cmd: 'InsertOrderedList', value: { 'list-style-type': 'decimal' }},\n            {start: 'a. ', cmd: 'InsertOrderedList', value: { 'list-style-type': 'lower-alpha' }},\n            {start: 'a) ', cmd: 'InsertOrderedList', value: { 'list-style-type': 'lower-alpha' }},\n            {start: 'i. ', cmd: 'InsertOrderedList', value: { 'list-style-type': 'lower-roman' }},\n            {start: 'i) ', cmd: 'InsertOrderedList', value: { 'list-style-type': 'lower-roman' }}\n          ],\n\n          contextmenu: \"bold italic | link table spellchecker\",\n\n          autosave_restore_when_empty: true,\n          autosave_retention: \"180m\",\n         \n          min_height: 600,\n          height: 700,\n\n          setup: function (editor) {\n\n            const ZOOMS = [0, 0.5, 0.65, 0.8, 0.9, 1, 1.05, 1.15, 1.25, 1.5, 2],\n                minZoom = ZOOMS[1],\n                maxZoom = ZOOMS[ZOOMS.length-1]\n            let btnZoomIn,\n                btnZoomOut\n\n            const checkDisabledZooms = function (zoom) {\n              btnZoomIn.setDisabled(zoom >= maxZoom)  \n              btnZoomOut.setDisabled(zoom <= minZoom)\n            }\n\n            const increaseZoom = function (increment = 1) {\n              const bodyElement = editor.dom.getRoot()\n              const zoom = Number(editor.dom.getStyle(bodyElement, 'zoom', true))\n              const zoomPosition = ZOOMS.indexOf(zoom)\n              const newZoom = ZOOMS[zoomPosition + increment]\n              if (!newZoom) {\n                return zoom\n              }\n              editor.dom.setStyle(bodyElement, 'zoom', newZoom)\n              return newZoom\n            }\n\n            const increaseZoomAndCheckButtons = function (increment) {\n              return checkDisabledZooms(increaseZoom(increment))\n            }\n\n            editor.on('init', function(e) {\n              editor.execCommand('mceFullScreen')\n              const bodyElement = editor.dom.getRoot()\n              bodyElement.addEventListener('keydown', function (e) {\n                // Captura o Ctrl-+ e Ctrl-- (Zoom In e Zoom Out)\n                if (!e.ctrlKey)\n                  return\n                if (e.key === '+' || e.key === '-') {\n                  let increment = e.key === '+' ? 1 : -1\n                  increaseZoomAndCheckButtons(increment)    \n                  e.preventDefault()\n                  e.stopPropagation()\n                }  \n              })\n            })\n\n            editor.ui.registry.addButton('zoomin', {\n              icon: 'zoom-in',\n              tooltip: 'Aumentar tamanho da letra',\n              disabled: false,\n              onSetup: btn => btnZoomIn = btn,\n              onAction: btn => {\n                increaseZoomAndCheckButtons(1)\n              },\n            })\n\n            editor.ui.registry.addButton('zoomout', {\n              icon: 'zoom-out',\n              tooltip: 'Reduzir tamanho da letra',\n              disabled: false,\n              onSetup: btn => btnZoomOut = btn,\n              onAction: btn => {\n                increaseZoomAndCheckButtons(-1)\n              },\n            })\n\n          },    \n\n          init_instance_callback: function (editor) {\n            editor.on('PreProcess', function (e) {\n              console.log(e.node);\n            });\n          },  \n\n        }}\n        onChange={this.handleEditorChange}\n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}